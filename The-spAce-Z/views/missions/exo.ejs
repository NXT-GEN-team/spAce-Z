<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Exoplanet Explorer</title>
  <link rel="stylesheet" href="/homepage.css">
  <style>
    body {
      background: #000;
      color: aliceblue;
      font-family: Arial, sans-serif;
      margin: 0;
      min-height: 100vh;
    }
    header {
      height: auto;
      padding: 2rem;
      text-align: center;
      background: rgba(0, 0, 0, 0.8);
      backdrop-filter: blur(10px);
    }
    header h1 {
      color: #fff;
      text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
      margin: 0;
      font-size: 2.5rem;
    }
    header a {
      color: aliceblue;
      text-decoration: none;
      text-shadow: 0 0 5px rgb(0, 208, 255);
      display: inline-block;
      margin-top: 1rem;
      transition: all 0.3s ease;
    }
    header a:hover {
      color: rgb(0, 208, 255);
      transform: translateX(-5px);
    }
    .form-container {
      text-align: center;
      margin: 2rem auto;
      max-width: 600px;
      padding: 2rem;
      background: rgba(0, 0, 0, 0.681);
      backdrop-filter: blur(0.1px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 10px;
      transition: all 0.4s ease;
    }
    .form-container:hover {
      box-shadow: 0 0 25px rgba(234, 0, 255, 0.8);
      backdrop-filter: blur(0.5px);
    }
    .input-group {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 2rem;
      flex-wrap: wrap;
      margin-bottom: 1.5rem;
    }
    .input-field {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .input-field label {
      color: aliceblue;
      text-shadow: 0 0 5px rgb(0, 208, 255);
      margin-bottom: 0.5rem;
    }
    input[type="number"] {
      padding: 0.8rem;
      border-radius: 8px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      background: rgba(0, 0, 0, 0.5);
      color: aliceblue;
      font-size: 1rem;
      transition: all 0.3s ease;
      width: 200px;
    }
    input[type="number"]:focus {
      outline: none;
      border-color: rgb(0, 208, 255);
      box-shadow: 0 0 10px rgba(0, 208, 255, 0.3);
    }
    button {
      background: transparent;
      color: aliceblue;
      border: 1px solid rgba(255, 255, 255, 0.1);
      padding: 0.8rem 2rem;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.3s ease;
      text-shadow: 0 0 5px rgb(0, 208, 255);
    }
    button:hover {
      background: rgba(234, 0, 255, 0.2);
      border-color: rgb(234, 0, 255);
      box-shadow: 0 0 15px rgba(234, 0, 255, 0.4);
    }
    .table-container {
      max-width: 1200px;
      margin: 2rem auto;
      padding: 2rem;
      background: rgba(0, 0, 0, 0.681);
      backdrop-filter: blur(0.1px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 10px;
      transition: all 0.4s ease;
      overflow-x: auto;
    }
    .table-container:hover {
      box-shadow: 0 0 25px rgba(234, 0, 255, 0.8);
      backdrop-filter: blur(0.5px);
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1rem;
      color: aliceblue;
    }
    th {
      background: rgba(0, 0, 0, 0.5);
      color: #fff;
      text-shadow: 0 0 5px rgb(0, 208, 255);
      padding: 1rem;
      text-align: left;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    td {
      padding: 1rem;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      text-shadow: 0 0 3px rgb(0, 255, 106);
    }
    tr:hover {
      background: rgba(234, 0, 255, 0.1);
    }
    .error {
      color: #ff6b6b;
      text-align: center;
      padding: 1rem;
      background: rgba(255, 107, 107, 0.1);
      border-radius: 8px;
      margin: 1rem auto;
      max-width: 600px;
      text-shadow: 0 0 5px rgba(255, 107, 107, 0.5);
    }
    .info-text {
      color: aliceblue;
      text-shadow: 0 0 3px rgb(0, 255, 106);
      margin: 1rem 0;
      font-size: 0.9rem;
      opacity: 0.8;
    }
    .no-data {
      text-align: center;
      color: aliceblue;
      text-shadow: 0 0 3px rgb(0, 255, 106);
      padding: 2rem;
    }
  </style>
</head>
<body>
  <header>
    <h1>üåå Exoplanet Explorer</h1>
    <a href="/missions">‚Üê Back to Missions</a>
  </header>

  <div class="form-container">
    <form method="GET" action="/missions/exo">
      <div class="input-group">
        <div class="input-field">
          <label>Discovery Year</label>
          <input type="number" name="year" value="<%= year %>" min="1992" max="<%= new Date().getFullYear() %>" required>
        </div>
      </div>
      <p class="info-text">Enter a year to find exoplanets discovered after that year.</p>
      <button type="submit">Search Exoplanets</button>
    </form>
  </div>

  <% if (error) { %>
    <p class="error"><%= error %></p>
  <% } else if (Array.isArray(planets) && planets.length > 0) { %>
    <div class="table-container">
      <table>
        <thead>
          <tr>
            <th>Planet Name</th>
            <th>Host Star</th>
            <th>Discovery Year</th>
            <th>Radius (Earth)</th>
            <th>Mass (Earth)</th>
            <th>Distance (pc)</th>
            <th>Star Temp (K)</th>
          </tr>
        </thead>
        <tbody>
          <% planets.forEach(p => { %>
            <tr>
              <td><%= p?.pl_name || 'N/A' %></td>
              <td><%= p?.hostname || 'N/A' %></td>
              <td><%= p?.disc_year || 'N/A' %></td>
              <td><%= p?.pl_rade ? p.pl_rade.toFixed(2) : 'N/A' %></td>
              <td><%= p?.pl_bmasse ? p.pl_bmasse.toFixed(2) : 'N/A' %></td>
              <td><%= p?.st_dist ? p.st_dist.toFixed(2) : 'N/A' %></td>
              <td><%= p?.st_teff ? p.st_teff.toFixed(0) : 'N/A' %></td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  <% } else { %>
    <p class="no-data">No exoplanets found for the selected year.</p>
  <% } %>

  <script>
    // Add animation for table container
    const tableContainer = document.querySelector('.table-container');
    if (tableContainer) {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
          }
        });
      }, { threshold: 0.1 });

      observer.observe(tableContainer);
    }
  </script>
</body>
</html>
